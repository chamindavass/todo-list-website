{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://D%3A/chammu/To-do/to-do/src/components/to-do%20list.js"],"sourcesContent":["\"use client\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\n\r\nconst PersistentTodoList = () => {\r\n  const [todos, setTodos] = useState([]);\r\n  const [newTodo, setNewTodo] = useState(\"\");\r\n  const [editing, setEditing] = useState({ id: null, text: \"\" });\r\n  const [selectedTodos, setSelectedTodos] = useState([]); // Track selected todos for deletion\r\n\r\n  useEffect(() => {\r\n    const storedTodos = localStorage.getItem(\"todos\");\r\n    if (storedTodos) setTodos(JSON.parse(storedTodos));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n  }, [todos]);\r\n\r\n  const addTodo = () => {\r\n    if (newTodo.trim()) {\r\n      setTodos([{ id: Date.now(), text: newTodo, completed: false }, ...todos]);\r\n      setNewTodo(\"\");\r\n    }\r\n  };\r\n\r\n  const toggleComplete = (id) => {\r\n    setTodos(\r\n      todos.map((todo) =>\r\n        todo.id === id ? { ...todo, completed: !todo.completed } : todo\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleEditClick = (id, text) => setEditing({ id, text });\r\n\r\n  const saveEdit = (id) => {\r\n    setTodos(\r\n      todos.map((todo) =>\r\n        todo.id === id ? { ...todo, text: editing.text } : todo\r\n      )\r\n    );\r\n    setEditing({ id: null, text: \"\" });\r\n  };\r\n\r\n  const toggleSelectTodo = (id) => {\r\n    setSelectedTodos((prev) =>\r\n      prev.includes(id) ? prev.filter((todoId) => todoId !== id) : [...prev, id]\r\n    );\r\n  };\r\n\r\n  const clearSelectedTodos = () => {\r\n    setTodos(todos.filter((todo) => !selectedTodos.includes(todo.id)));\r\n    setSelectedTodos([]); // Clear the selection after deleting\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      addTodo();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"min-h-screen min-w-full flex flex-col items-center pt-10 bg-cover bg-center\"\r\n      style={{ backgroundImage: \"url(/images/back.webp)\" }}\r\n    >\r\n      <div className=\"bg-white/75 p-6 rounded-2xl shadow-lg w-full max-w-xl\">\r\n        <h1 className=\"text-3xl font-bold text-center mb-4\">To-Do List</h1>\r\n        <div className=\"flex mb-4\">\r\n          <input\r\n            type=\"text\"\r\n            value={newTodo}\r\n            onChange={(e) => setNewTodo(e.target.value)}\r\n            onKeyDown={handleKeyDown} // Add keydown handler here\r\n            placeholder=\"Add a task...\"\r\n            className=\"flex-1 p-2 border rounded-l\"\r\n          />\r\n          <button\r\n            onClick={addTodo}\r\n            className=\"p-2 bg-green-500 text-white rounded-r\"\r\n          >\r\n            Add\r\n          </button>\r\n        </div>\r\n        <ul>\r\n          <AnimatePresence>\r\n            {todos.map((todo) => (\r\n              <motion.li\r\n                key={todo.id}\r\n                initial={{ opacity: 0, y: 10 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                exit={{ opacity: 0, y: -10 }}\r\n                transition={{ duration: 0.3 }}\r\n                className={`p-2 flex items-center justify-between border-b ${\r\n                  todo.completed ? \"bg-green-100\" : \"bg-white\"\r\n                }`}\r\n              >\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={selectedTodos.includes(todo.id)}\r\n                  onChange={() => toggleSelectTodo(todo.id)} // Toggle selection for delete\r\n                  className=\"mr-2\"\r\n                />\r\n                {editing.id === todo.id ? (\r\n                  <div className=\"flex-1\">\r\n                    <input\r\n                      type=\"text\"\r\n                      value={editing.text}\r\n                      onChange={(e) =>\r\n                        setEditing({ ...editing, text: e.target.value })\r\n                      }\r\n                      className=\"w-full border p-1\"\r\n                    />\r\n                    <button\r\n                      onClick={() => saveEdit(todo.id)}\r\n                      className=\"mt-2 p-2 bg-blue-500 text-white rounded\"\r\n                    >\r\n                      Save\r\n                    </button>\r\n                  </div>\r\n                ) : (\r\n                  <span\r\n                    className={`flex-1 cursor-pointer ${\r\n                      todo.completed ? \"line-through text-gray-500\" : \"\"\r\n                    }`}\r\n                    onClick={() => handleEditClick(todo.id, todo.text)}\r\n                  >\r\n                    {todo.text}\r\n                  </span>\r\n                )}\r\n              </motion.li>\r\n            ))}\r\n          </AnimatePresence>\r\n        </ul>\r\n        {todos.length > 0 && (\r\n          <button\r\n            onClick={clearSelectedTodos} // Clear selected todos\r\n            className=\"mt-4 w-full bg-red-500 text-white p-2 rounded\"\r\n          >\r\n            Clear Selected\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PersistentTodoList;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}